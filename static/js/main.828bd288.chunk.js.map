{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","monsters","searchMosters","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAAAC,GAEhB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAEhF,6BACKL,EAAMG,QAAQG,OAEnB,4BAAIN,EAAMG,QAAQI,YCNjBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMG,QAAQM,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCRtBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EACjDG,SAAUF,MCoCPG,E,kDAnCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,SAAU,GACVC,cAAe,IALL,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEP,SAAUM,S,oBAE7C,WAAU,IAAD,OACP,EAAoCE,KAAKT,MAAjCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,cACZQ,EAAiBT,EAASU,QAAO,SAAAxB,GAAO,OAAIA,EAAQG,KAAKsB,cAC5DC,SAASX,EAAcU,kBAI1B,OAEE,sBAAK3B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CAAWU,YAAY,iBACrBC,aARe,SAAAkB,GACnB,EAAKN,SAAS,CAAEN,cAAeY,EAAEC,OAAOC,WAStC,cAAC,EAAD,CAAU7B,QAASuB,W,GA7BTO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.828bd288.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card = props => {\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=190x190`} alt=\"MONSTER\" />\r\n\r\n            <h2>\r\n                {props.monster.name}\r\n            </h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport '../card/card.component';\r\nimport { Card } from '../card/card.component';\r\n\r\n\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monster.map(monster => (\r\n                <Card key={monster.id} monster={monster}></Card>\r\n            ))}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport '../search-box/search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input className='search' type='search' placeholder={placeholder}\r\n            onChange={handleChange} />\r\n    );\r\n}","\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchMosters: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n  render() {\n    const { monsters, searchMosters } = this.state;\n    const filterMonsters = monsters.filter(monster => monster.name.toLowerCase()\n      .includes(searchMosters.toLowerCase()));\n    const handleChange = e => {\n      this.setState({ searchMosters: e.target.value });\n    }\n    return (\n\n      <div className='App'>\n        <h1>Monster RoleDx</h1>\n        <SearchBox placeholder='Search Monster'\n          handleChange={handleChange}\n        />\n        <CardList monster={filterMonsters}>\n        </CardList>\n\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}